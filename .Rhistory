age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react())), 1),
# Equation for females
round(sum(merged_coefs$l1fatfemalecircum*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react())), 1)
)
,
"%"
)
})
output$leanMassAppPredCirc = reactive({
# Intro text
paste("Predicted appendicular lean mass is",
ifelse(sex_react() == 'Male',
# Equation for males
round(sum(merged_coefs$appleanmalecircum*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react()))/1000, 1),
# Equation for females
round(sum(merged_coefs$appleanfemalecircum*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react()))/1000, 1)
)
,
"kg"
)
})
##############
# CIRCUMFERENCES + SKINFOLDS
output$fatMassTotalPredCircSkin = reactive({
paste('Predicted fat mass is',
ifelse(sex_react() == 'Male',
# Equation for males
round(sum(merged_coefs$totfatmalecircumskin*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react()))/1000, 1),
# Equation for females
round(sum(merged_coefs$totfatfemalecircumskin*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react()))/1000, 1)
),
'kg'
)
})
output$leanMassTotalPredCircSkin = reactive({
paste('Predicted lean mass is',
ifelse(sex_react() == 'Male',
# Equation for males
round(sum(merged_coefs$totleanmalecircumskin*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react()))/1000, 1),
# Equation for females
round(sum(merged_coefs$totleanfemalecircumskin*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react()))/1000, 1)
),
'kg'
)
})
output$fatPercTotalPredCircSkin = reactive({
# Intro text
paste("Predicted total fat percentage is",
ifelse(sex_react() == 'Male',
# Equation for males
round(sum(merged_coefs$totfatpmalecircumskin*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react())), 1),
# Equation for females
round(sum(merged_coefs$totfatpfemalecircumskin*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react())), 1)
)
,
"%"
)
})
output$fatPercTrunkPredCircSkin = reactive({
# Intro text
paste("Predicted trunk fat percentage is",
ifelse(sex_react() == 'Male',
# Equation for males
round(sum(merged_coefs$trunkfatmalecircumskin*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react())), 1),
# Equation for females
round(sum(merged_coefs$trunkfatfemalecircumskin*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react())), 1)
)
,
"%"
)
})
output$fatPercL1PredCircSkin = reactive({
# Intro text
paste("Predicted L1-L4 fat percentage is",
ifelse(sex_react() == 'Male',
# Equation for males
round(sum(merged_coefs$l1fatmalecircumskin*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react())), 1),
# Equation for females
round(sum(merged_coefs$l1fatfemalecircumskin*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react())), 1)
)
,
"%"
)
})
output$leanMassAppPredCircSkin = reactive({
# Intro text
paste("Predicted appendicular lean mass is",
ifelse(sex_react() == 'Male',
# Equation for males
round(sum(merged_coefs$appleanmalecircumskin*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react()))/1000, 1),
# Equation for females
round(sum(merged_coefs$appleanfemalecircumskin*c(1, seg_la_pcent_react(), seg_la_mass_react(), seg_la_free_mass_react(), seg_la_muscle_react(), seg_tr_pcent_react(),
seg_tr_mass_react(), seg_tr_free_mass_react(), seg_tr_muscle_react(), weight_react(), bmi_react(),
tbf_pcent_react(), tbf_mass_react(), tbf_free_mass_react(), tbf_water_react(), imp_whole_body_react(),
imp_rleg_react(), imp_lleg_react(), imp_rarm_react(), imp_larm_react(), seg_rl_pcent_react(), seg_rl_mass_react(),
seg_rl_free_mass_react(), seg_rl_muscle_react(), seg_ll_pcent_react(), seg_ll_mass_react(), seg_ll_free_mass_react(),
seg_ll_muscle_react(), seg_ra_pcent_react(), seg_ra_mass_react(), seg_ra_free_mass_react(), seg_ra_muscle_react(), 0,
age_react(), calf_circ_react(), head_circ_react(), cheste_circ_react(), waist_circ_react(), hip_circ_react(),
arm_circ_react(), tri_fold_react(), bi_fold_react(), sub_fold_react(), sup_fold_react(), calf2_fold_react(),
height_react(), dom_grip_react(), nondom_grip_react(), waist_hip_react(), waist_height_react(), chest_waist_react(), calf_height_react(), impmod_whole_react(),
impmod_rleg_react(), impmod_lleg_react(), impmod_rarm_react(), impmod_larm_react(), fmi_react(),
lmi_react(), bsi_react(), log_skin_react(), age_grip_react(), cama_react()))/1000, 1)
)
,
"kg"
)
})
#################################
# Try to think of elegant way to include the percentile error messages
# maybe create a vector of all the relevant reacts()
# Then do something like
# WHERE X < percentiles$Y or X > percentiles$Z
# Print percentiles$varname
# Maybe somehow ignore 0's or NAs?
# And have condition that if ALL false, then display nothing
# Also consider adding some text about interpretation of results
# Maybe better suited in UI section since it does not rely on any inputs.
# Might need to create more readable list of variable names for printing purposes...
# In meantime, print from train_percentiles$varname
# Remember this is different for males and females.
output$percentileMessage  = output$percentileMessage2 = output$percentileMessage3 = output$percentileMessage4 = output$percentileMessage5 = output$percentileMessage6 = output$percentileMessage7 = reactive({
if(sex_react() == "Male"){
ifelse(sum(!is.na(percs_check()) & ((percs_check() < train_percentiles$male_1) | (percs_check() > train_percentiles$male_99))) > 0,
paste(c("The following stations have extreme values: ",
train_percentiles$var_name_clean[which(!is.na(percs_check()) & ((percs_check() < train_percentiles$male_1) | (percs_check() > train_percentiles$male_99)))]),
collapse = "\n"),
"No stations were detected to have extreme values")
}else{
ifelse(sum(!is.na(percs_check()) & ((percs_check() < train_percentiles$female_1) | (percs_check() > train_percentiles$female_99))) > 0,
paste(c("The following stations have extreme values: ",
train_percentiles$var_name_clean[which(!is.na(percs_check()) & ((percs_check() < train_percentiles$female_1) | (percs_check() > train_percentiles$female_99)))]),
collapse = "\n"),
"No stations were detected to have extreme values")
}
})
# end of server
}
shinyApp(ui = ui, server = server)
# part "b"
set.seed(123123)
mles = numeric(10000)
mysamp = rpois(10000, lambda = 3)
for (i in 1:10000){
mles[i] = mean(mysamp[1:i])
}
mle_results = data.frame(mles = mles,
n = 1:10000)
mle_results %>% ggplot(aes(log10(n), mles)) + geom_point() + geom_hline(yintercept = 3)
# consider n = 10, 100, 1000, 10000
my_partc = data.frame(n = rep(c(10, 100, 1000, 10000), each = 4),
mles = rep(c(mles[10], mles[100],
mles[1000], mles[10000]), 4))
my_seq = 0:10
pois10 = dpois(my_seq, lambda = mles[10])
pois100 = dpois(my_seq, lambda = mles[100])
pois1000 = dpois(my_seq, lambda = mles[1000])
pois10000 = dpois(my_seq, lambda = mles[10000])
poistrue = dpois(my_seq, lambda = 3)
mycresults = data.frame(x = 0:10,
pois10 = pois10,
pois100 = pois100,
pois1000 = pois1000,
pois10000 = pois10000,
poistrue = poistrue
)
myclong = mycresults %>% pivot_longer(cols = c(pois10, pois100, pois1000, pois10000, poistrue))
myclong %>% ggplot(aes(x = x, y = value, color = name)) + geom_point()
set.seed(9)
asymptotia = numeric(100)
for (i in 1:100){
mysamp = rpois(100000, lambda = 3)
asymptotia[i] = mean(mysamp)
}
hist(asymptotia)
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_density()
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_density() + xlim(-2.95, 3.05)
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_density() + xlim(2.95, 3.05)
# Assume we have reached "convergence" by 100000
# This will give the "asymptotic distribution"
set.seed(99)
asymptotia = numeric(100)
for (i in 1:100){
mysamp = rpois(100000, lambda = 3)
asymptotia[i] = mean(mysamp)
}
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_density() + xlim(2.95, 3.05)
# Assume we have reached "convergence" by 100000
# This will give the "asymptotic distribution"
set.seed(99)
asymptotia = numeric(1000)
for (i in 1:1000){
mysamp = rpois(100000, lambda = 3)
asymptotia[i] = mean(mysamp)
}
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_density() + xlim(2.95, 3.05)
# Assume we have reached "convergence" by 100000
# This will give the "asymptotic distribution"
set.seed(99)
asymptotia = numeric(1000)
for (i in 1:1000){
mysamp = rpois(100000, lambda = 3)
asymptotia[i] = sqrt(100000)*(mean(mysamp) - 3)
}
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_density() + xlim(2.95, 3.05)
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_density()
realnorm =
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_hist()
realnorm =
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_histogram()
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_histogram()
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_histogram() +
stat_function(fun = dnorm, args = list(mean = 3, sd = sqrt(3)))
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_histogram() +
stat_function(fun = dnorm, args = list(mean = 0, sd = sqrt(3)))
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_density() +
stat_function(fun = dnorm, args = list(mean = 0, sd = sqrt(3)))
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_density(fill = "cyan") +
stat_function(fun = dnorm, args = list(mean = 0, sd = sqrt(3)))
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) + geom_density(fill = "cyan", alpha = 0.5) +
stat_function(fun = dnorm, args = list(mean = 0, sd = sqrt(3)))
set.seed(99)
asymptotia = numeric(5000)
for (i in 1:5000){
mysamp = rpois(500000, lambda = 3)
asymptotia[i] = sqrt(500000)*(mean(mysamp) - 3)
}
# This is not quite what it was asking I think...
set.seed(99)
asymptotia = numeric(5000)
for (i in 1:5000){
mysamp = rpois(100000, lambda = 3)
asymptotia[i] = (mean(mysamp))
}
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) +
geom_density(fill = "cyan", alpha = 0.5)
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) +
geom_density(fill = "cyan", alpha = 0.5) +
stat_function(fun = dnorm, args = list(mean = 3, sd = sqrt(3/100000)))
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) +
geom_density(fill = "cyan", alpha = 0.5) +
stat_function(fun = dnorm, args = list(mean = 3, sd = sqrt(3/100000), col = "red"))
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) +
geom_density(fill = "cyan", alpha = 0.5) +
stat_function(fun = dnorm, args = list(mean = 3, sd = sqrt(3/100000), fill = "red"))
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) +
geom_density(fill = "cyan", alpha = 0.5) +
stat_function(fun = dnorm, args = list(mean = 3, sd = sqrt(3/100000)), fill = "red")
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) +
geom_density(fill = "cyan", alpha = 0.5) +
stat_function(fun = dnorm, args = list(mean = 3, sd = sqrt(3/100000)), col = "red")
set.seed(99)
asymptotia = numeric(5000)
for (i in 1:5000){
mysamp = rpois(20, lambda = 3)
asymptotia[i] = (mean(mysamp))
}
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) +
geom_density(fill = "cyan", alpha = 0.5) +
stat_function(fun = dnorm, args = list(mean = 3, sd = sqrt(3/20)), col = "red")
set.seed(99)
asymptotia = numeric(5000)
for (i in 1:5000){
mysamp = rpois(10, lambda = 3)
asymptotia[i] = (mean(mysamp))
}
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) +
geom_density(fill = "cyan", alpha = 0.5) +
stat_function(fun = dnorm, args = list(mean = 3, sd = sqrt(3/10)), col = "red")
# Last can repeat experiment b but multiply by sqrt n
set.seed(123123)
mles = numeric(10000)
for (i in 1:10000){
mysamp = rpois(i, lambda = 3)
mles[i] = i*(mean(mysamp) - 3)
}
mle_results = data.frame(mles = mles,
n = 1:10000)
mle_results %>% ggplot(aes(log10(n), log(mles))) + geom_point() + geom_hline(yintercept = 0)
set.seed(123123)
mles = numeric(10000)
for (i in 1:10000){
mysamp = rpois(i, lambda = 10)
mles[i] = i*(mean(mysamp) - 10)
}
mle_results = data.frame(mles = mles,
n = 1:10000)
mle_results %>% ggplot(aes(log10(n), log(mles))) + geom_point() + geom_hline(yintercept = 0)
set.seed(123123)
mles = numeric(10000)
for (i in 1:10000){
mysamp = rpois(i, lambda = 3)
mles[i] = sqrt(i)*(mean(mysamp) - 3)
}
mle_results = data.frame(mles = mles,
n = 1:10000)
mle_results %>% ggplot(aes(log10(n), log(mles))) + geom_point() + geom_hline(yintercept = 0)
# part "b"
# Shuold probably actually do this for like 100 datasets per instructions...
set.seed(123123)
mle_results = data.frame(n = 1:10000)
for (j in 1:10){
mles = numeric(10000)
mysamp = rpois(10000, lambda = 3)
for (i in 1:10000){
mles[i] = mean(mysamp[1:i])
}
mle_results = cbind(mle_results, mles)
}
mle_results
rowMeans(mle_results[,2:11])
mle_results = data.frame(n = 1:10000, mles = rowMeans(mle_results[,2:11]))
mle_results %>% ggplot(aes(log10(n), mles)) + geom_point() + geom_hline(yintercept = 3)
set.seed(123123)
mle_results = data.frame(n = 1:10000)
for (j in 1:100){
mles = numeric(10000)
mysamp = rpois(10000, lambda = 3)
for (i in 1:10000){
mles[i] = mean(mysamp[1:i])
}
mle_results = cbind(mle_results, mles)
}
mle_results = data.frame(n = 1:10000, mles = rowMeans(mle_results[,2:101]))
mle_results %>% ggplot(aes(log10(n), mles)) + geom_point() + geom_hline(yintercept = 3)
mle_results %>% ggplot(aes(log10(n), mles)) + geom_point() + geom_hline(yintercept = 3) +
ggtitle("Convergence of MLE")
mle_results %>% ggplot(aes(log10(n), mles)) + geom_point() + geom_hline(yintercept = 3) +
ggtitle("Convergence of MLE") + ylab("MLEs")
my_partc = data.frame(n = rep(c(10, 100, 1000, 10000), each = 4),
mles = rep(c(mles[10], mles[100],
mles[1000], mles[10000]), 4))
my_seq = 0:10
pois10 = dpois(my_seq, lambda = mles[10])
pois100 = dpois(my_seq, lambda = mles[100])
pois1000 = dpois(my_seq, lambda = mles[1000])
pois10000 = dpois(my_seq, lambda = mles[10000])
poistrue = dpois(my_seq, lambda = 3)
mycresults = data.frame(x = 0:10,
pois10 = pois10,
pois100 = pois100,
pois1000 = pois1000,
pois10000 = pois10000,
poistrue = poistrue
)
myclong = mycresults %>% pivot_longer(cols = c(pois10, pois100, pois1000, pois10000, poistrue))
myclong %>% ggplot(aes(x = x, y = value, color = name)) + geom_point()
myclong %>% ggplot(aes(x = x, y = value, color = name)) + geom_point() + ggtitle("Convergence of functions")
set.seed(99)
asymptotia = numeric(5000)
for (i in 1:5000){
mysamp = rpois(100000, lambda = 3)
asymptotia[i] = (mean(mysamp))
}
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) +
geom_density(fill = "cyan", alpha = 0.5) +
stat_function(fun = dnorm, args = list(mean = 3, sd = sqrt(3/100000)), col = "red")
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) +
geom_density(fill = "cyan", alpha = 0.5) +
stat_function(fun = dnorm, args = list(mean = 3, sd = sqrt(3/100000)), col = "red") + geom_title("Asymptotic Distribution of MLE")
data.frame(asymptotia = asymptotia) %>% ggplot(aes(asymptotia)) +
geom_density(fill = "cyan", alpha = 0.5) +
stat_function(fun = dnorm, args = list(mean = 3, sd = sqrt(3/100000)), col = "red") + ggtitle("Asymptotic Distribution of MLE")
mle_results
mle_results %>% ggplot(aes(log10(n), log(mles))) + geom_point() + geom_hline(yintercept = 3) +
ggtitle("Convergence of MLE") + ylab("MLEs")
mle_results %>% ggplot(aes(sqrt(n), mles)) + geom_point() + geom_hline(yintercept = 3) +
ggtitle("Convergence of MLE") + ylab("MLEs")
renv::init("/Users/nickbirk/pset2/")
